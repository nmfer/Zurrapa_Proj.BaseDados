{
  "info": {
    "title": "sql_project_final",
    "x-type": "odata",
    "x-connector": "mssql",
    "x-connector-version": 15
  },
  "definitions": {
    "Bar": {
      "x-table": "dbo.Bar",
      "resource": "Bars",
      "required": [
        "id_bar",
        "id_responsible",
        "address",
        "phone_num",
        "id_branch"
      ],
      "properties": {
        "id_bar": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Bar",
              "name": "ProductsInBars",
              "type": "ProductsInBar"
            },
            {
              "inversePropertyName": "Bar",
              "name": "Orders",
              "type": "Order"
            },
            {
              "inversePropertyName": "Bar",
              "name": "DayBarBranches",
              "type": "DayBarBranch"
            }
          ]
        },
        "id_responsible": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "address": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "phone_num": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_branch": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProductsInBars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductsInBar"
          }
        },
        "Orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "DayBarBranches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayBarBranch"
          }
        }
      }
    },
    "Branch": {
      "x-table": "dbo.Branch",
      "resource": "Branches",
      "required": [
        "id_branch",
        "id_responsible",
        "designation",
        "email",
        "phone_num",
        "address"
      ],
      "properties": {
        "id_branch": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Branch",
              "name": "DayBranches",
              "type": "DayBranch"
            }
          ]
        },
        "id_responsible": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "designation": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "email": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "phone_num": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "address": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "DayBranches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayBranch"
          }
        }
      }
    },
    "DayBarBranch": {
      "x-table": "dbo.Day_Bar_Branch",
      "resource": "DayBarBranches",
      "required": [
        "date",
        "total_received",
        "total_spend",
        "id_bar"
      ],
      "properties": {
        "DayBranch": {
          "type": "object",
          "$ref": "#/definitions/DayBranch"
        },
        "date": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Day_Branch",
            "parentEntityType": "DayBranch",
            "type": "DayBranch",
            "principalKey": "date",
            "name": "DayBranch",
            "textProperty": "date",
            "navigationProperty": "DayBarBranches"
          }
        },
        "total_received": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "total_spend": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "Bar": {
          "type": "object",
          "$ref": "#/definitions/Bar"
        },
        "id_bar": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Bar",
            "parentEntityType": "Bar",
            "type": "Bar",
            "principalKey": "id_bar",
            "name": "Bar",
            "textProperty": "address",
            "navigationProperty": "DayBarBranches"
          }
        }
      }
    },
    "DayBranch": {
      "x-table": "dbo.Day_Branch",
      "resource": "DayBranches",
      "required": [
        "date",
        "total_received",
        "total_spend",
        "id_branch"
      ],
      "properties": {
        "date": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "DayBranch",
              "name": "DayBarBranches",
              "type": "DayBarBranch"
            }
          ]
        },
        "total_received": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "total_spend": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "Branch": {
          "type": "object",
          "$ref": "#/definitions/Branch"
        },
        "id_branch": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Branch",
            "parentEntityType": "Branch",
            "type": "Branch",
            "principalKey": "id_branch",
            "name": "Branch",
            "textProperty": "designation",
            "navigationProperty": "DayBranches"
          }
        },
        "DayBarBranches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayBarBranch"
          }
        }
      }
    },
    "Employee": {
      "x-table": "dbo.Employee",
      "resource": "Employees",
      "required": [
        "id_num",
        "type",
        "pwd"
      ],
      "properties": {
        "id_num": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "type": {
          "x-nullable": false,
          "type": "string",
          "length": 30
        },
        "pwd": {
          "x-nullable": false,
          "type": "string",
          "length": 30
        }
      }
    },
    "ListEmployee": {
      "x-table": "dbo.List_Employees",
      "resource": "ListEmployees",
      "required": [
        "date",
        "id_branch",
        "id_bar",
        "id_num",
        "id_warehouse",
        "cod"
      ],
      "properties": {
        "date": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date",
          "x-key": true,
          "x-virtual": true
        },
        "id_branch": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_bar": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_num": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_warehouse": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "cod": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      },
      "x-view": true
    },
    "Order": {
      "x-table": "dbo.Orders",
      "resource": "Orders",
      "required": [
        "id_order",
        "total_price",
        "id_bar",
        "table_number",
        "order_status"
      ],
      "properties": {
        "id_order": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "total_price": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "Bar": {
          "type": "object",
          "$ref": "#/definitions/Bar"
        },
        "id_bar": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Bar",
            "parentEntityType": "Bar",
            "type": "Bar",
            "principalKey": "id_bar",
            "name": "Bar",
            "textProperty": "address",
            "navigationProperty": "Orders"
          }
        },
        "table_number": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "order_status": {
          "x-nullable": false,
          "type": "string",
          "length": 30
        }
      }
    },
    "Product": {
      "x-table": "dbo.Products",
      "resource": "Products",
      "required": [
        "id_product",
        "name",
        "category",
        "set_to_unit",
        "sale_price",
        "purchase_price"
      ],
      "properties": {
        "id_product": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Product",
              "name": "ProductsInBars",
              "type": "ProductsInBar"
            },
            {
              "inversePropertyName": "Product",
              "name": "ProductsInWarehouses",
              "type": "ProductsInWarehouse"
            }
          ]
        },
        "name": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "category": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "set_to_unit": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "sale_price": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "purchase_price": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "ProductsInBars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductsInBar"
          }
        },
        "ProductsInWarehouses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductsInWarehouse"
          }
        }
      }
    },
    "ProductsInBar": {
      "x-table": "dbo.Products_in_bar",
      "resource": "ProductsInBars",
      "required": [
        "id_product",
        "name",
        "quantity",
        "sale_price",
        "minimum_quantity",
        "id_bar"
      ],
      "properties": {
        "Product": {
          "type": "object",
          "$ref": "#/definitions/Product"
        },
        "id_product": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Products",
            "parentEntityType": "Product",
            "type": "Product",
            "principalKey": "id_product",
            "name": "Product",
            "textProperty": "category",
            "navigationProperty": "ProductsInBars",
            "foreignKeys": [
              "id_product",
              "name"
            ],
            "principalKeys": [
              "id_product",
              "name"
            ]
          }
        },
        "name": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true
        },
        "quantity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "sale_price": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "minimum_quantity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Bar": {
          "type": "object",
          "$ref": "#/definitions/Bar"
        },
        "id_bar": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Bar",
            "parentEntityType": "Bar",
            "type": "Bar",
            "principalKey": "id_bar",
            "name": "Bar",
            "textProperty": "address",
            "navigationProperty": "ProductsInBars"
          }
        }
      }
    },
    "ProductsInWarehouse": {
      "x-table": "dbo.Products_in_Warehouse",
      "resource": "ProductsInWarehouses",
      "required": [
        "id_warehouse",
        "quantity",
        "purchase_price",
        "minimum_quantity",
        "total_quantity",
        "id_product",
        "name"
      ],
      "properties": {
        "Warehouse": {
          "type": "object",
          "$ref": "#/definitions/Warehouse"
        },
        "id_warehouse": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Warehouse",
            "parentEntityType": "Warehouse",
            "type": "Warehouse",
            "principalKey": "id_warehouse",
            "name": "Warehouse",
            "textProperty": "id_warehouse",
            "navigationProperty": "ProductsInWarehouses"
          }
        },
        "quantity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "purchase_price": {
          "x-nullable": false,
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "minimum_quantity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "total_quantity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Product": {
          "type": "object",
          "$ref": "#/definitions/Product"
        },
        "id_product": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Products",
            "parentEntityType": "Product",
            "type": "Product",
            "principalKey": "id_product",
            "name": "Product",
            "textProperty": "category",
            "navigationProperty": "ProductsInWarehouses",
            "foreignKeys": [
              "id_product",
              "name"
            ],
            "principalKeys": [
              "id_product",
              "name"
            ]
          }
        },
        "name": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        }
      }
    },
    "ProductsOrder": {
      "x-table": "dbo.Products_order",
      "resource": "ProductsOrders",
      "required": [
        "id_order",
        "id_product",
        "name"
      ],
      "properties": {
        "id_order": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "id_product": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "name": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        }
      },
      "x-view": true
    },
    "ProductsToRestock": {
      "x-table": "dbo.Products_to_restock",
      "resource": "ProductsToRestocks",
      "required": [
        "restock_status",
        "quatity",
        "id_bar",
        "id_product",
        "name",
        "id_warehouse"
      ],
      "properties": {
        "restock_status": {
          "x-nullable": false,
          "type": "string",
          "length": 30,
          "x-key": true,
          "x-virtual": true
        },
        "quatity": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_bar": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "id_product": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "name": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "id_warehouse": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      },
      "x-view": true
    },
    "Schedule": {
      "x-table": "dbo.Schedule",
      "resource": "Schedules",
      "required": [
        "cod",
        "entry_time",
        "exit_time"
      ],
      "properties": {
        "cod": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "entry_time": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "exit_time": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "Warehouse": {
      "x-table": "dbo.Warehouse",
      "resource": "Warehouses",
      "required": [
        "id_warehouse"
      ],
      "properties": {
        "id_warehouse": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Warehouse",
              "name": "ProductsInWarehouses",
              "type": "ProductsInWarehouse"
            }
          ]
        },
        "ProductsInWarehouses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductsInWarehouse"
          }
        }
      }
    }
  },
  "paths": {
    "/Bars": {
      "get": {
        "operationId": "getBars",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Bar"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBar",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Bar",
            "schema": {
              "$ref": "#/definitions/Bar"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Bar"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Branches": {
      "get": {
        "operationId": "getBranches",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Branch"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Branch",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DayBarBranches": {
      "get": {
        "operationId": "getDayBarBranches",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/DayBarBranch"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createDayBarBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "DayBarBranch",
            "schema": {
              "$ref": "#/definitions/DayBarBranch"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DayBarBranch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DayBranches": {
      "get": {
        "operationId": "getDayBranches",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/DayBranch"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createDayBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "DayBranch",
            "schema": {
              "$ref": "#/definitions/DayBranch"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DayBranch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Employees": {
      "get": {
        "operationId": "getEmployees",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Employee"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEmployee",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Employee",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ListEmployees": {
      "get": {
        "operationId": "getListEmployees",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ListEmployee"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Orders": {
      "get": {
        "operationId": "getOrders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Order"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createOrder",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Products": {
      "get": {
        "operationId": "getProducts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Product"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createProduct",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsInBars": {
      "get": {
        "operationId": "getProductsInBars",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProductsInBar"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createProductsInBar",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "ProductsInBar",
            "schema": {
              "$ref": "#/definitions/ProductsInBar"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProductsInBar"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsInWarehouses": {
      "get": {
        "operationId": "getProductsInWarehouses",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProductsInWarehouse"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createProductsInWarehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "ProductsInWarehouse",
            "schema": {
              "$ref": "#/definitions/ProductsInWarehouse"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProductsInWarehouse"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsOrders": {
      "get": {
        "operationId": "getProductsOrders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProductsOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsToRestocks": {
      "get": {
        "operationId": "getProductsToRestocks",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProductsToRestock"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Schedules": {
      "get": {
        "operationId": "getSchedules",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Schedule"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createSchedule",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Schedule",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Warehouses": {
      "get": {
        "operationId": "getWarehouses",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Warehouse"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createWarehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Warehouse",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Bars({id_bar})": {
      "delete": {
        "operationId": "deleteBar",
        "parameters": [
          {
            "in": "path",
            "name": "id_bar",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBarByid_bar",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_bar",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bar"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBar",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_bar",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Bar",
            "schema": {
              "$ref": "#/definitions/Bar"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Branches({id_branch})": {
      "delete": {
        "operationId": "deleteBranch",
        "parameters": [
          {
            "in": "path",
            "name": "id_branch",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBranchByid_branch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_branch",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_branch",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Branch",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DayBarBranches({date})": {
      "delete": {
        "operationId": "deleteDayBarBranch",
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getDayBarBranchBydate",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DayBarBranch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateDayBarBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DayBarBranch",
            "schema": {
              "$ref": "#/definitions/DayBarBranch"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DayBranches({date})": {
      "delete": {
        "operationId": "deleteDayBranch",
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getDayBranchBydate",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DayBranch"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateDayBranch",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DayBranch",
            "schema": {
              "$ref": "#/definitions/DayBranch"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Employees({id_num})": {
      "delete": {
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "in": "path",
            "name": "id_num",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEmployeeByid_num",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_num",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEmployee",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_num",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Employee",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Orders({id_order})": {
      "delete": {
        "operationId": "deleteOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id_order",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getOrderByid_order",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_order",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOrder",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_order",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Products(id_product={id_product},name='{name}')": {
      "delete": {
        "operationId": "deleteProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getProductById_productAndName",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "Product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsInBars(id_product={id_product},name='{name}')": {
      "delete": {
        "operationId": "deleteProductsInBar",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getProductsInBarById_productAndName",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductsInBar"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProductsInBar",
        "parameters": [
          {
            "in": "path",
            "name": "id_product",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "ProductsInBar",
            "schema": {
              "$ref": "#/definitions/ProductsInBar"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProductsInWarehouses({id_warehouse})": {
      "delete": {
        "operationId": "deleteProductsInWarehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getProductsInWarehouseByid_warehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductsInWarehouse"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProductsInWarehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProductsInWarehouse",
            "schema": {
              "$ref": "#/definitions/ProductsInWarehouse"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Schedules({cod})": {
      "delete": {
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "in": "path",
            "name": "cod",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getScheduleBycod",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "cod",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSchedule",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "cod",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Schedule",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Warehouses({id_warehouse})": {
      "delete": {
        "operationId": "deleteWarehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getWarehouseByid_warehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateWarehouse",
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id_warehouse",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Warehouse",
            "schema": {
              "$ref": "#/definitions/Warehouse"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "basePath": "/odata/SqlProjectFinal",
  "host": "localhost:5000",
  "schemes": [
    "http"
  ]
}